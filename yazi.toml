"$schema" = "https://yazi-rs.github.io/schemas/yazi.json"

[manager]

ratio = [2, 3, 4]
show_hidden = true
show_symlink = false
scrolloff = 3

[preview]

max_width = 1920
max_height = 1080

[opener]

edit = [
  { run = '$EDITOR "$@"', block = true, desc = "Edit", for = "linux" },
  { run = 'nvim "%*"', block = true, desc = "Edit", for = "windows" },
]
open = [
  { run = 'xdg-open "$@"', desc = "Open", for = "linux" },
  { run = 'start "" "%1"', orphan = true, desc = "Open", for = "windows" },
]
open_document = [
  { run = 'xdg-open "$@"', desc = "Open", for = "linux" },
  { run = 'D:\Apps\SumatraPDF\sumatrapdf.exe "%1"', orphan = true, desc = "Open", for = "windows" },
]
open_image = [
  { run = 'xdg-open "$@"', desc = "Open", for = "linux" },
  { run = 'D:\Apps\JPEGView\JPEGView.exe "%1"', orphan = true, desc = "Open", for = "windows" },
]
reveal = [
  { run = 'xdg-open "$(dirname "$0")"', desc = "Reveal", for = "linux" },
  { run = 'totalcmd64 /o /p=l "%1"', orphan = true, desc = "Reveal", for = "windows" },
]
extract = [
  { run = 'ouch decompress "$1"', desc = "Extract", for = "unix" },
  { run = 'ouch decompress "%1"', desc = "Extract", for = "windows" },
]
play = [
  { run = 'mpv "$@"', orphan = true, desc = "Play", for = "unix" },
  { run = 'mpv "%1"', orphan = true, desc = "Play", for = "windows" },
]

[open]

rules = [
  { name = "*/", use = ["edit", "open", "reveal"] },
  { mime = "text/*", use = ["edit", "open", "reveal"] },
  { mime = "application/octet-stream", use = ["edit", "open", "reveal"] },
  { mime = "*/{csv,javascript,json,x-ndjson}", use = ["edit", "reveal"] },
  { name = "*.{epub,pdf}", use = ["open_document", "reveal"] },
  { mime = "image/*", use = ["open_image", "reveal"] },
  { mime = "{audio,video}/*", use = ["play", "reveal"] },
  { mime = "application/{gzip,zip}", use = ["extract", "reveal"] },
  { mime = "application/x-{tar,bzip*,7z-compressed,xz,rar}", use = ["extract", "reveal"] },
  { mime = "inode/x-empty", use = ["edit", "reveal"] },
  { mime = "*", use = ["open", "reveal"] },
]

[plugin]

previewers = [
  { name = "*/", run = "folder", sync = true },
  { mime = "text/*", run = "code" },
  { mime = "application/octet-stream", run = "code" },
  { mime = "*/{csv,javascript,json,x-ndjson}", run = "code" },
  { name = "*.[ot]tf", run = "font" },
  { mime = "image/{heic,jxl,svg+xml}", run = "magick" },
  { mime = "image/*", run = "image" },
  { mime = "video/*", run = "video" },
  { mime = "application/{gzip,zip}", run = "previewer-7z" },
  { mime = "application/x-iso9660-image", run = "previewer-7z" },
  { mime = "application/x-{tar,bzip*,7z-compressed,xz,rar}", run = "previewer-7z" },
  { mime = "application/pdf", run = "pdf" },
  # { mime = "inode/x-empty", run = "noop" },
  { name = "*", run = "noop" },
]

[input]

cd_title = " Change directory "
cd_origin = "center"

create_title = " Create file or directory "
create_origin = "center"

rename_title = " Rename "
rename_origin = "center"

trash_title = " Trash {n} file{s}? (y/N) "
trash_origin = "center"

delete_title = " Delete {n} file{s}? (y/N) "
delete_origin = "center"

filter_title = " Filter "
filter_origin = "center"

find_title = [" Find next ", " Find previous "]
find_origin = "center"

search_title = " Search with {n} "
search_origin = "center"

shell_title = [" Shell ", " Shell (blocking) "]
shell_origin = "center"

overwrite_title = " Overwrite? (y/N) "
overwrite_origin = "center"

quit_title = " Quit with {n} task{s} running? (y/N) "
quit_origin = "center"

[select]

open_title = " Open "
open_origin = "center"